=title Perlbrew on Linux (Ubuntu 18.10)
=timestamp 2018-12-28T12:30:01
=indexes perlbrew
=status show
=author szabgab
=comments_disqus_enable 0

=abstract start

I have a new computer with Ubuntu 18.10 on it. It comes with perl 5.26, but I wanted to brew my own perl.

=abstract end

Install <a href="https://perlbrew.pl/">perlbrew</a>

<code>
sudo apt-get install perlbrew
</code>

List the available versions of perl:

<code>
perlbrew available
</code>

Brew (install) perl 5.28.1:

<code>
$ perlbrew install perl-5.28.1
</code>

The response is

<code>
Fetching perl 5.28.1 as /home/gabor/perl5/perlbrew/dists/perl-5.28.1.tar.gz
Download http://www.cpan.org/src/5.0/perl-5.28.1.tar.gz to /home/gabor/perl5/perlbrew/dists/perl-5.28.1.tar.gz
ERROR: Failed to download http://www.cpan.org/src/5.0/perl-5.28.1.tar.gz
</code>

Oh. That's not good.

<code>
mkdir -p perl5/perlbrew/dists
</code>

Now this works:

<code>
perlbrew install perl-5.28.1
</code>

<h2>Using Perlbrew</h2>

At this point you should be able to switch to the newly intsalled perl using

<code>
perlbrew switch perl-5.28.1
</code>

and it works, but it also prints this, and the switch is only temporary. I think this should be a permanent switch.
As I recall it used to be a permanent switch.

<code>
A sub-shell is launched with perl-5.28.1 as the activated perl. Run 'exit' to finish it.
</code>

Anyway, not too optimal workaround is to add this

<code>
export PATH=~/perl5/perlbrew/perls/perl-5.28.1/bin:$PATH
</code>

to the <hl>~/.bashrc</hl> file.

<h2>Comments</h2>

perlbrew init then adding source ~/perl5/perlbrew/etc/bashrc to your .profile should fix the switch not sticking issue.
