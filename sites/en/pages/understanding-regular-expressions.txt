=title Understanding regular expressions
=timestamp 2016-01-23T08:30:01
=indexes regex
=status show
=books beginner
=author szabgab
=archive 1
=comments_disqus_enable 0

=abstract start

The other day one of the readers of the <a href="/perl-tutorial">Perl Maven tutorial</a>
asked me about regular expressions.

She asked if the regular expressions work on words or on strings.

This made me think about this a bit.

=abstract end

<h2>Regular expressions per character</h2>

In general, regular expressions work per character so

<ul>
  <li><hl>z</hl> matches one single 'z' character</li>
  <li><hl>.</hl> (the dot) matches one single character - any character except newline</li>
  <li><hl>[abc]</hl> (a <a href="/regex-character-classes">character class</a>) matches one single character, a or b or c</li>
  <li><hl>\s</hl> matches a single "white space" character</li>
  <li><hl>\p{...}</hl> matches a single character in the appropriate <a href="/regex-special-character-classes">Unicode character class</a></li>
  <li>etc.</li>
</ul>

*, +, ? and {} are <a href="/regex-quantifiers">quantifiers</a> that tell how many times
the character that is on the left hand site can match:

<ul>
  <li><hl>z*</hl>  means 0 or more 'z' characters</li>
  <li><hl>z+</hl> means 1 or more 'z' characters</li>
  <li><hl>z?</hl> means 0 or 1 'z' character.</li>
  <li><hl>z{2, 4}</hl> means 2, 3 or 4 'z' characters.</li>
  <li><hl>[abc]+</hl> means matching a, b or c one or more times.</li>
</ul>

Then we can have sub-expressins enclosed in parentheses, and we can apply quantifiers to these subexpressions.
So we can have a subexpression like <hl>#\d{2,4}-\d{4,7}\s+</hl> and if we would like to have more of these
matching one after the other, we can enclose it in <hl>()</hl> parentheses and put a quantifier (e.g. <hl>{3,}</hl>) after it:
<hl>(#\d{2,4}-\d{4,7}\s+){3,}</hl> That quantifier will be applied to the whole subexpression, meaning that subexpression has
to match 3 or more times.

This seems to match "words" or "strings", but in reality those "words" or "strings" are matched on the
individual character level.


<h2>Regex cheat sheet</h2>

There are a number of articles about regexes you might want to read. The
central one might be the <a href="/regex-cheat-sheet">regex cheat sheet</a>
that has links to all the other articles.


<h2>Comments</h2>

i don't understand meaning of [^a-z0-9]*[ \t\n\r][^a-z0-9]* .

---
What do you understand from this?

